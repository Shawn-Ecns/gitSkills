git config --global user.name "Your Name"
git config --global user.email "email@example.com"

一、创建Git仓库，使用UTF-8编码
选择一个本地文件夹创建一个空目录
mkdir xxx
cd xxx
git init 创建唯一分支 master 

二、添加文件到Git仓库
可以执行多个add命令添加多个文件，然后执行一次commit命令提交所有改动
git add xxx文件 将文件修改添加到暂存区
git commit -m "xxx" 将暂存区所有内容提交到 master 分支（HEAD指向的分支）
git status 查看当前仓库状态 有文件被修改，可以使用 git diff 来查看具体修改明细
git diff xxx文件 查看文件修改后对比
git log --pretty=oneline 使用log命令来查看最近到最远的提交日志

三、版本回退
在Git中用 HEAD 表示当前版本，用 HEAD^ 表示上上版本
git reset --hard（soft/mixed） HEAD^ 
hard 已提交
soft 未提交
mixed 已添加但未提交

git reflog 可以查看每次命令涉及到的 commit id 便于从历史版本滚到未来版本

四、工作区和暂存区
工作区就是当前本地电脑能看到的文件系统
暂存区就是使用 git add 命令后，提交文件的地方
一旦使用 git commit 命令，暂存区的文件会被清空并全部提交到 当前 HEAD 指向的分支

git diff HEAD -- xxx文件 查看工作区和版本库里面最新版本的区别

五、修改撤销
回到最后一次 git commit 或者 git add 的状态
git checkout -- xxx文件 把文件在工作区的修改全部撤销

如果使用了 git add 已经将工作区的修改提交到了暂存区则可以使用
git reset HEAD xxx文件 将暂存区的修改全部撤销
再使用 git checkout -- xxx文件 将工作区的修改撤销

如果已经使用 git commit 命令提交到了当前分支 则可以使用版本回退 git reset --hard HEAD^

六、删除文件
在工作区先把文件删掉
git add/rm xxx文件 删除版本库中的文件

如果是误删则可以使用
git checkout -- xxx文件 从版本库恢复该文件

七、远程仓库
首先生成 ssh key
ssh-keygen -t rsa -C "emial@example.com"
用户目录下 /.ssh/id_rsa.pub 
将文件内容放到 github 网站中的 Setting -> ssh Setting 中 new SSH key


echo "# learnQt" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Shawn-Ecns/learnQt.git
git push -u origin main

lenovo token(github)
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

https://<your_token>@github.com/<USERNAME>/<REPO>.git
git remote set-url origin  https://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@github.com/Shawn-Ecns/learnQt.git


解决 git push 报错 无法连接服务器
git config --global --unset http.proxy
git config --global --unset https.proxy
git config --global http.proxy http://127.0.0.1:7890

本地修改文件后
git add .
git commit -m "xxx"
git push origin main 

关联远程库
git remote add origin git@server-name:path/repo-name.git

第一次推送
git push -u origin master
后续推送可以省略 -u 参数
删除远程库
git remote -v
git remote rm <name>

git 工作流
先登录 GitHub 创建一个新仓库 gitSkills
git clone git@github.com:Shawn-Ecns/gitSkills.git
创建一个新分支 dev
git branch <name>
创建并切换分支
git checkout -b <name> / git switch -c <name>
查看当前所有分支
git branch
切换分支
git checkout <name> / git switch <name>
合并指定分支到当前分支
git merge <name>
删除分支
git branch -d <name>
图表化显示分支提交情况
git log --graph --pretty=oneline --abbrev-commit